import java.util.*;
import java.util.stream.Collectors;

class Student {
    String name;
    double marks;

    public Student(String name, double marks) {
        this.name = name;
        this.marks = marks;
    }

    @Override
    public String toString() {
        return name + " - " + marks;
    }
}

public class StudentStreamExample {
    public static void main(String[] args) {
        List<Student> students = Arrays.asList(
            new Student("Alice", 82),
            new Student("Bob", 74),
            new Student("Charlie", 90),
            new Student("David", 65),
            new Student("Emma", 78)
        );

        // Using Stream API to filter, sort, and collect names of students scoring above 75%
        List<String> topStudents = students.stream()
            .filter(student -> student.marks > 75) // Filter students scoring above 75%
            .sorted(Comparator.comparingDouble(Student::getMarks).reversed()) // Sort by marks (descending)
            .map(student -> student.name) // Extract names
            .collect(Collectors.toList()); // Collect names into a list

        // Displaying the sorted names
        System.out.println("Students scoring above 75% (sorted by marks descending): " + topStudents);
    }
}
